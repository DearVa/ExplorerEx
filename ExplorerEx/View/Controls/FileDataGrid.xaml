<DataGrid x:Class="ExplorerEx.View.Controls.FileDataGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:u="clr-namespace:ExplorerEx.Utils"
             xmlns:m="clr-namespace:ExplorerEx.Model"
             xmlns:c="clr-namespace:ExplorerEx.Converter"
             xmlns:ct="clr-namespace:ExplorerEx.View.Controls"
             Style="{StaticResource DataGridBaseStyle}"
             Background="{x:Null}" SelectionMode="Extended" 
             AutoGenerateColumns="False" RowHeight="30" ColumnHeaderHeight="20"
             VirtualizingStackPanel.IsVirtualizing="True"
             VirtualizingStackPanel.ScrollUnit="Pixel"
             mc:Ignorable="d" AllowDrop="True">
    <DataGrid.Resources>
        <ControlTemplate x:Key="FileOperationsTemplate">
            <StackPanel Orientation="Horizontal" d:DataContext="{d:DesignInstance m:FileSystemItem}">
                <Button Height="35" ToolTip="{u:Lang Cut}" 
                        Command="{Binding DataContext.CutCommand, RelativeSource={RelativeSource AncestorType=ct:FileDataGrid}}">
                    <Image Width="20" Height="20" Source="{StaticResource CutDrawingImage}"/>
                </Button>
                <Button Height="35" Margin="6,0,0,0" ToolTip="{u:Lang Copy}"
                        Command="{Binding DataContext.CopyCommand, RelativeSource={RelativeSource AncestorType=ct:FileDataGrid}}">
                    <Image Width="20" Height="20" Source="{StaticResource CopyDrawingImage}"/>
                </Button>
                <Button Height="35" Margin="6,0,0,0" ToolTip="{u:Lang Rename}"
                        Command="{Binding DataContext.RenameCommand, RelativeSource={RelativeSource AncestorType=ct:FileDataGrid}}">
                    <Image Width="20" Height="20" Source="{StaticResource RenameDrawingImage}"/>
                </Button>
                <Button Height="35" Margin="6,0,6,0" ToolTip="{u:Lang Share}"
                        Command="{Binding DataContext.ShareCommand, RelativeSource={RelativeSource AncestorType=ct:FileDataGrid}}">
                    <Image Width="20" Height="20" Source="{StaticResource ShareDrawingImage}"/>
                </Button>
                <Button Height="35" ToolTip="{u:Lang Delete}"
                        Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType=ct:FileDataGrid}}">
                    <Image Width="20" Height="20" Source="{StaticResource DeleteDrawingImage}"/>
                </Button>
            </StackPanel>
        </ControlTemplate>

        <ct:HoverContextMenu x:Key="FolderItemContextMenu" d:DataContext="{d:DesignInstance m:FileSystemItem}">
            <MenuItem Height="30" hc:IconElement.Height="18" hc:IconElement.Width="18"
                      Command="{Binding OpenCommand}"
                      Icon="{Binding Icon}" Header="{u:Lang Open}" FontSize="15"/>
            <MenuItem Height="30" hc:IconElement.Height="18" hc:IconElement.Width="18"
                      Command="{Binding OpenInNewTabCommand}"
                      Icon="{StaticResource ShareDrawingImage}" Header="{u:Lang Open_in_new_Tab}" FontSize="15"/>
            <MenuItem Height="30" hc:IconElement.Height="18" hc:IconElement.Width="18"
                      Command="{Binding OpenInNewWindowCommand}"
                      Icon="{StaticResource ShareDrawingImage}" Header="{u:Lang Open_in_new_Window}" FontSize="15"/>
            <MenuItem Height="30" hc:IconElement.Height="18" hc:IconElement.Width="18"
                      Command="{Binding ShowPropertiesCommand}"
                      Icon="{StaticResource PropertiesDrawingImage}" Header="{u:Lang Properties}" FontSize="15"/>
        </ct:HoverContextMenu>

        <ct:HoverContextMenu x:Key="FileItemContextMenu" d:DataContext="{d:DesignInstance m:FileSystemItem}">
            <MenuItem Height="35" Template="{StaticResource FileOperationsTemplate}"/>
            <Separator/>

            <MenuItem Height="30" hc:IconElement.Height="18" hc:IconElement.Width="18"
                      Command="{Binding OpenCommand}"
                      Icon="{Binding Icon}" Header="{u:Lang Open}" FontSize="15"/>
            <MenuItem Height="30" hc:IconElement.Height="18" hc:IconElement.Width="18"
                      Command="{Binding ShowPropertiesCommand}"
                      Icon="{StaticResource PropertiesDrawingImage}" Header="{u:Lang Properties}" FontSize="15"/>
        </ct:HoverContextMenu>

        <c:FileSystemItemContextMenuConverter x:Key="FileSystemItemContextMenuConverter"
                                                  DirectoryContextMenu="{StaticResource FolderItemContextMenu}"
                                                  FileContextMenu="{StaticResource FileItemContextMenu}"/>
    </DataGrid.Resources>

    <DataGrid.Template>
        <ControlTemplate TargetType="DataGrid">
            <ControlTemplate.Resources>
                <Storyboard x:Key="Storyboard1">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_VerticalScrollBar">
                        <EasingDoubleKeyFrame KeyTime="0:0:.2" Value=".8"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_HorizontalScrollBar">
                        <EasingDoubleKeyFrame KeyTime="0:0:.2" Value=".8"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="Storyboard2">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_VerticalScrollBar">
                        <EasingDoubleKeyFrame KeyTime="0:0:.2" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_HorizontalScrollBar">
                        <EasingDoubleKeyFrame KeyTime="0:0:.2" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </ControlTemplate.Resources>
            <Grid>
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                    <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                        <ScrollViewer.Template>
                            <ControlTemplate TargetType="ScrollViewer">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Button Command="{x:Static DataGrid.SelectAllCommand}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType=DataGrid},Converter={StaticResource DoubleMinConverter}}" Style="{StaticResource ButtonIcon}" hc:IconElement.Geometry="{StaticResource AllGeometry}" Foreground="{DynamicResource PrimaryBrush}">
                                        <Button.Visibility>
                                            <MultiBinding Converter="{StaticResource DataGridSelectAllButtonVisibilityConverter}">
                                                <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource AncestorType=DataGrid}"/>
                                                <Binding Path="(hc:DataGridAttach.ShowSelectAllButton)" RelativeSource="{RelativeSource AncestorType=DataGrid}"/>
                                            </MultiBinding>
                                        </Button.Visibility>
                                    </Button>
                                    <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.ColumnSpan="2" Grid.Row="0" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                                    <hc:ToggleBlock IsChecked="{Binding HasItems,RelativeSource={RelativeSource AncestorType=DataGrid},Mode=OneWay}" Grid.ColumnSpan="3" Grid.Column="0" Grid.Row="1" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch">
                                        <hc:ToggleBlock.CheckedContent>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}"/>
                                        </hc:ToggleBlock.CheckedContent>
                                        <hc:ToggleBlock.UnCheckedContent>
                                            <hc:Empty />
                                        </hc:ToggleBlock.UnCheckedContent>
                                    </hc:ToggleBlock>
                                    <ScrollBar Style="{StaticResource ScrollBarBaseStyle}" Opacity="0" x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                    <ScrollBar Style="{StaticResource ScrollBarBaseStyle}" Opacity="0" x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" VerticalAlignment="Bottom" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <EventTrigger RoutedEvent="MouseEnter">
                                        <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="MouseLeave">
                                        <BeginStoryboard Storyboard="{StaticResource Storyboard2}"/>
                                    </EventTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ScrollViewer.Template>
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </ScrollViewer>
                </Border>
                <Grid x:Name="ContentGrid" ClipToBounds="True" Margin="0,36,0,0">
                    <Border x:Name="SelectionRect" CornerRadius="3" Background="#66326cf3" BorderBrush="{DynamicResource PrimaryBrush}" BorderThickness="1" Visibility="Collapsed" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                </Grid>
            </Grid>
        </ControlTemplate>
    </DataGrid.Template>
    <DataGrid.RowStyle>
        <Style TargetType="DataGridRow" BasedOn="{StaticResource DataGridRowStyle}">
            <Setter Property="ContextMenu" Value="{Binding IsFolder, Converter={StaticResource FileSystemItemContextMenuConverter}}"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
        </Style>
    </DataGrid.RowStyle>
    <DataGrid.Columns>
        <DataGridTemplateColumn Header="{u:Lang Name}" Width="350">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <Grid Height="30" VerticalAlignment="Center" d:DataContext="{d:DesignInstance m:FileSystemItem}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="0" 
                               Source="{Binding Icon}"
                               VerticalAlignment="Center" Margin="5"/>
                        <TextBlock Grid.Column="1" Text="{Binding Name, Mode=OneWay}" VerticalAlignment="Center" 
                                   Visibility="{Binding EditingName, Converter={StaticResource Object2VisibilityReConverter}}"/>
                        <hc:TextBox x:Name="RenameTextBox" Grid.Column="1" hc:BorderElement.CornerRadius="3"
                                    Text="{Binding EditingName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" 
                                    Visibility="{Binding EditingName, Converter={StaticResource Object2VisibilityConverter}}"
                                    VerifyFunc="{u:Get VerifyFunc}" IsError="{Binding IsErrorFileName, Mode=OneWayToSource}">
                            <hc:Interaction.Triggers>
                                <hc:RoutedEventTrigger RoutedEvent="TextBox.LostFocus">
                                    <hc:EventToCommand Command="{Binding LostFocusCommand}" PassEventArgsToCommand="True"/>
                                </hc:RoutedEventTrigger>
                            </hc:Interaction.Triggers>
                            <hc:TextBox.Style>
                                <Style TargetType="hc:TextBox" BasedOn="{StaticResource TextBoxPlusBaseStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding EditingName, Converter={StaticResource Object2BooleanConverter}}" Value="True">
                                            <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=RenameTextBox}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </hc:TextBox.Style>
                        </hc:TextBox>
                    </Grid>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="{u:Lang Modification_date}" Width="200">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <TextBlock d:DataContext="{d:DesignInstance m:FileSystemItem}"
                               Text="{Binding LastWriteTime}" 
                               VerticalAlignment="Center"
                               IsHitTestVisible="False"/>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="{u:Lang File_type}" Width="100">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <TextBlock d:DataContext="{d:DesignInstance m:FileSystemItem}"
                               Text="{Binding FileTypeString}" 
                               VerticalAlignment="Center"
                               IsHitTestVisible="False"/>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="{u:Lang File_size}" Width="100">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <TextBlock d:DataContext="{d:DesignInstance m:FileSystemItem}"
                               Text="{Binding FileSizeString}" 
                               VerticalAlignment="Center"
                               IsHitTestVisible="False"/>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
    </DataGrid.Columns>
</DataGrid>

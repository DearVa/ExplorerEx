<DataGrid x:Class="ExplorerEx.View.Controls.FileDataGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:u="clr-namespace:ExplorerEx.Utils"
             xmlns:m="clr-namespace:ExplorerEx.Model"
             xmlns:c="clr-namespace:ExplorerEx.Converter"
             xmlns:ct="clr-namespace:ExplorerEx.View.Controls"
             xmlns:vw="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
             d:DataContext="{d:DesignInstance ct:FileDataGrid}"
             Background="{x:Null}" SelectionMode="Extended" 
             AutoGenerateColumns="False" ColumnHeaderHeight="20"
             RowHeight="{Binding ItemSize.Height, Mode=OneWay, RelativeSource={RelativeSource Self}}"
             VirtualizingStackPanel.IsVirtualizing="True"
             VirtualizingStackPanel.ScrollUnit="Pixel"
             mc:Ignorable="d" AllowDrop="True">
    <DataGrid.Resources>
        <ItemsPanelTemplate x:Key="StackPanelTemplate">
            <VirtualizingStackPanel/>
        </ItemsPanelTemplate>

        <ItemsPanelTemplate x:Key="WrapPanelTemplate">
            <vw:VirtualizingWrapPanel SpacingMode="BetweenItemsOnly" CanHorizontallyScroll="False" VirtualizationMode="Recycling" SnapsToDevicePixels="True"/>
        </ItemsPanelTemplate>

        <c:FileDataGridItemsPanelConverter x:Key="ItemsPanelConverter"
                                           StackPanelTemplate="{StaticResource StackPanelTemplate}"
                                           WrapPanelTemplate="{StaticResource WrapPanelTemplate}"/>

        <!--DataGridTemplateColumn是一个虚拟容器，并不会出现在VisualTree里，所以这个不能Binding，添加Attach属性也没用-->
        <!--只能将Width设为自动，然后在Cell里Binding到FileDataGrid-->
        <DataGridTemplateColumn x:Key="IconColumn" Width="Auto">
            <DataGridTemplateColumn.CellStyle>
                <Style TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellStyle}">
                    <Setter Property="Padding" Value="0"/>
                </Style>
            </DataGridTemplateColumn.CellStyle>
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <!--https://www.cnblogs.com/wuty/p/15599045.html-->
                    <!--此处必须写成Binding Path=xxx，如果省略Path=，语法上没有问题，也能正确绑定，但是会引发一次异常，导致加载速度变慢-->
                    <Grid Width="{Binding Path=(ct:FileDataGrid.ItemSize).Width, RelativeSource={RelativeSource AncestorType=ct:FileDataGrid}}"
                          Height="{Binding Path=(ct:FileDataGrid.ItemSize).Height, RelativeSource={RelativeSource AncestorType=ct:FileDataGrid}}" 
                          d:DataContext="{d:DesignInstance m:FileViewBaseItem}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{Binding Path=(ct:FileDataGrid.ItemSize).Width, RelativeSource={RelativeSource AncestorType=ct:FileDataGrid}}"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Image Grid.Row="0" HorizontalAlignment="Center" SnapsToDevicePixels="True" Source="{Binding Icon}"
                               VerticalAlignment="Center" Margin="10"/>
                        <TextBlock Grid.Row="1" Text="{Binding Name, Mode=OneWay}" HorizontalAlignment="Center" 
                                   TextAlignment="Center" TextTrimming="WordEllipsis" TextWrapping="Wrap"
                                   Visibility="{Binding EditingName, Converter={StaticResource Object2VisibilityReConverter}}"/>
                        <hc:TextBox x:Name="RenameTextBox" Grid.Row="1" hc:BorderElement.CornerRadius="3" TextWrapping="Wrap" HorizontalAlignment="Center"
                                    Text="{Binding EditingName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                    Visibility="{Binding EditingName, Converter={StaticResource Object2VisibilityConverter}}"
                                    VerifyFunc="{u:Get VerifyFunc}" IsError="{Binding IsErrorFileName, Mode=OneWayToSource}">
                            <hc:Interaction.Triggers>
                                <hc:RoutedEventTrigger RoutedEvent="TextBox.LostFocus">
                                    <hc:EventToCommand Command="{Binding LostFocusCommand}" PassEventArgsToCommand="True"/>
                                </hc:RoutedEventTrigger>
                            </hc:Interaction.Triggers>
                            <hc:TextBox.Style>
                                <Style TargetType="hc:TextBox" BasedOn="{StaticResource TextBoxPlusBaseStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding EditingName, Converter={StaticResource Object2BooleanConverter}}" Value="True">
                                            <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=RenameTextBox}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </hc:TextBox.Style>
                        </hc:TextBox>
                    </Grid>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <!--主页显示驱动器-->
        <DataGridTemplateColumn x:Key="TileHomeTemplate" Width="260">
            <DataGridTemplateColumn.CellStyle>
                <Style TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellStyle}">
                    <Setter Property="Padding" Value="0"/>
                </Style>
            </DataGridTemplateColumn.CellStyle>
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <Grid d:DataContext="{d:DesignInstance m:DiskDriveItem}"
                          Height="60" Margin="5" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="0" Source="{Binding Icon}" VerticalAlignment="Center" Margin="5"/>
                        <StackPanel Grid.Column="1" Orientation="Vertical">
                            <TextBlock Text="{Binding Name, Mode=OneWay}"/>
                            <ProgressBar Value="{Binding FreeSpaceRatio, Mode=OneWay}" 
                                         Foreground="{Binding ProgressBarBackground, Mode=OneWay}"
                                         Maximum="1" BorderThickness="1.5" Margin="0,5,0,5" 
                                         SnapsToDevicePixels="True" hc:ProgressBarAttach.AnimationDisabled="True"
                                         Visibility="{Binding Driver.IsReady, Converter={StaticResource Boolean2VisibilityConverter}}"/>
                            <TextBlock Text="{Binding SpaceOverviewString, Mode=OneWay}"
                                       Visibility="{Binding Driver.IsReady, Converter={StaticResource Boolean2VisibilityConverter}}"/>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn x:Key="NameColumn" Header="{u:Lang Name}" Width="350">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <Grid Height="30" VerticalAlignment="Center" d:DataContext="{d:DesignInstance m:FileViewBaseItem}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="0" 
                               Source="{Binding Icon}"
                               VerticalAlignment="Center" Margin="5"/>
                        <TextBlock Grid.Column="1" Text="{Binding Name, Mode=OneWay}" VerticalAlignment="Center" 
                                   Visibility="{Binding EditingName, Converter={StaticResource Object2VisibilityReConverter}}"/>
                        <hc:TextBox x:Name="RenameTextBox" Grid.Column="1" hc:BorderElement.CornerRadius="3"
                                    Text="{Binding EditingName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" 
                                    Visibility="{Binding EditingName, Converter={StaticResource Object2VisibilityConverter}}"
                                    VerifyFunc="{u:Get VerifyFunc}" IsError="{Binding IsErrorFileName, Mode=OneWayToSource}">
                            <hc:Interaction.Triggers>
                                <hc:RoutedEventTrigger RoutedEvent="TextBox.LostFocus">
                                    <hc:EventToCommand Command="{Binding LostFocusCommand}" PassEventArgsToCommand="True"/>
                                </hc:RoutedEventTrigger>
                            </hc:Interaction.Triggers>
                            <hc:TextBox.Style>
                                <Style TargetType="hc:TextBox" BasedOn="{StaticResource TextBoxPlusBaseStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding EditingName, Converter={StaticResource Object2BooleanConverter}}" Value="True">
                                            <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=RenameTextBox}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </hc:TextBox.Style>
                        </hc:TextBox>
                    </Grid>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn x:Key="ModificationDateColumn" Header="{u:Lang Modification_date}" Width="200">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <TextBlock d:DataContext="{d:DesignInstance m:FileSystemItem}"
                               Text="{Binding LastWriteTime, Mode=OneWay}" 
                               VerticalAlignment="Center"
                               IsHitTestVisible="False"/>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn x:Key="TypeColumn" Header="{u:Lang Type}" Width="100">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <TextBlock d:DataContext="{d:DesignInstance m:FileViewBaseItem}"
                               Text="{Binding Type, Mode=OneWay}" 
                               VerticalAlignment="Center"
                               IsHitTestVisible="False"/>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn x:Key="FileSizeColumn" Header="{u:Lang File_size}" Width="100">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <TextBlock d:DataContext="{d:DesignInstance m:FileSystemItem}"
                               Text="{Binding FileSizeString, Mode=OneWay}" 
                               VerticalAlignment="Center"
                               IsHitTestVisible="False"/>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn x:Key="AvailableSpaceColumn" Header="{u:Lang Available_space}" Width="100">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <TextBlock d:DataContext="{d:DesignInstance m:DiskDriveItem}"
                               Text="{Binding FreeSpace, Mode=OneWay, Converter={StaticResource Long2FileSizeConverter}}" 
                               VerticalAlignment="Center"
                               IsHitTestVisible="False"/>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn x:Key="TotalSpaceColumn" Header="{u:Lang Total_space}" Width="100">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <TextBlock d:DataContext="{d:DesignInstance m:DiskDriveItem}"
                               Text="{Binding TotalSpace, Mode=OneWay, Converter={StaticResource Long2FileSizeConverter}}" 
                               VerticalAlignment="Center"
                               IsHitTestVisible="False"/>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn x:Key="FillRatioColumn" Header="{u:Lang Fill_ratio}" Width="100">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <ProgressBar d:DataContext="{d:DesignInstance m:DiskDriveItem}"
                                 Value="{Binding FreeSpaceRatio, Mode=OneWay}" 
                                 Foreground="{Binding ProgressBarBackground, Mode=OneWay}"
                                 Maximum="1" BorderThickness="1.5" Margin="0,2,0,2" 
                                 VerticalAlignment="Center" SnapsToDevicePixels="True" hc:ProgressBarAttach.AnimationDisabled="True"
                                 Visibility="{Binding Driver.IsReady, Converter={StaticResource Boolean2VisibilityConverter}}">
                        <ProgressBar.ToolTip>
                            <TextBlock>
                                <Run Text="{Binding FreeSpaceRatio, Mode=OneWay, StringFormat=P}"/>
                                <Run Text="%"/>
                            </TextBlock>
                        </ProgressBar.ToolTip>
                    </ProgressBar>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn x:Key="FileSystemColumn" Header="{u:Lang File_system}" Width="100">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <TextBlock d:DataContext="{d:DesignInstance m:DiskDriveItem}"
                               Text="{Binding Driver.DriveFormat, Mode=OneWay}" 
                               VerticalAlignment="Center"
                               IsHitTestVisible="False"/>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>

        <!-- 该资源在C#逻辑中获取 -->
        <!-- ReSharper disable once Xaml.RedundantResource -->
        <c:FileDataGridColumnsConverter x:Key="ColumnsConverter"
                                        IconTemplate="{StaticResource IconColumn}" TileHomeTemplate="{StaticResource TileHomeTemplate}"
                                        Name="{StaticResource NameColumn}" ModificationDate="{StaticResource ModificationDateColumn}"
                                        Type="{StaticResource TypeColumn}" FileSize="{StaticResource FileSizeColumn}"
                                        AvailableSpace="{StaticResource AvailableSpaceColumn}" TotalSpace="{StaticResource TotalSpaceColumn}"
                                        FillRatio="{StaticResource FillRatioColumn}" FileSystem="{StaticResource FileSystemColumn}"/>

        <ControlTemplate x:Key="FileOperationsTemplate">
            <StackPanel Orientation="Horizontal" d:DataContext="{d:DesignInstance m:FileViewBaseItem}">
                <Button Height="35" ToolTip="{u:Lang Cut}" 
                        Command="{Binding DataContext.CutCommand, RelativeSource={RelativeSource AncestorType=ct:FileDataGrid, AncestorLevel=2}}">
                    <Image Width="20" Height="20" Source="{StaticResource CutDrawingImage}"/>
                </Button>
                <Button Height="35" Margin="6,0,0,0" ToolTip="{u:Lang Copy}"
                        Command="{Binding DataContext.CopyCommand, RelativeSource={RelativeSource AncestorType=ct:FileDataGrid, AncestorLevel=2}}">
                    <Image Width="20" Height="20" Source="{StaticResource CopyDrawingImage}"/>
                </Button>
                <Button Height="35" Margin="6,0,0,0" ToolTip="{u:Lang Rename}"
                        Command="{Binding DataContext.RenameCommand, RelativeSource={RelativeSource AncestorType=ct:FileDataGrid, AncestorLevel=2}}">
                    <Image Width="20" Height="20" Source="{StaticResource RenameDrawingImage}"/>
                </Button>
                <Button Height="35" Margin="6,0,0,0" ToolTip="{u:Lang Delete}"
                        Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType=ct:FileDataGrid, AncestorLevel=2}}">
                    <Image Width="20" Height="20" Source="{StaticResource DeleteDrawingImage}"/>
                </Button>
            </StackPanel>
        </ControlTemplate>

        <ct:HoverContextMenu x:Key="FolderItemContextMenu" d:DataContext="{d:DesignInstance m:FileViewBaseItem}">
            <MenuItem Height="35" Template="{StaticResource FileOperationsTemplate}"/>
            <Separator/>

            <MenuItem Command="{Binding OpenCommand}" 
                      Icon="{Binding Icon}" Header="{u:Lang Open}"/>
            <MenuItem Command="{Binding OpenInNewTabCommand}" 
                      Icon="{StaticResource ShareDrawingImage}" Header="{u:Lang Open_in_new_Tab}"/>
            <MenuItem Command="{Binding OpenInNewWindowCommand}" 
                      Icon="{StaticResource ShareDrawingImage}" Header="{u:Lang Open_in_new_Window}"/>
            <Separator/>

            <MenuItem Command="{Binding AddToBookmarksCommand}"
                      Visibility="{Binding IsBookmarked, Mode=OneWay, Converter={StaticResource Boolean2VisibilityReConverter}}"
                      Icon="{StaticResource StarDrawingImage}" Header="{u:Lang Add_to_bookmarks}"/>
            <MenuItem Command="{Binding RemoveFromBookmarksCommand}"
                      Visibility="{Binding IsBookmarked, Mode=OneWay, Converter={StaticResource Boolean2VisibilityConverter}}"
                      Icon="{StaticResource UnstarDrawingImage}" Header="{u:Lang Remove_from_bookmarks}"/>
            <Separator/>

            <MenuItem Command="{Binding ShowPropertiesCommand}"
                      Icon="{StaticResource PropertiesDrawingImage}" Header="{u:Lang Properties}"/>
        </ct:HoverContextMenu>

        <ct:HoverContextMenu x:Key="FileItemContextMenu" d:DataContext="{d:DesignInstance m:FileViewBaseItem}">
            <MenuItem Height="35" Template="{StaticResource FileOperationsTemplate}"/>
            <Separator/>

            <MenuItem Command="{Binding OpenCommand}"
                      Visibility="{Binding IsRunnable, Mode=OneWay, Converter={StaticResource Boolean2VisibilityReConverter}}"
                      Icon="{Binding Icon}" Header="{u:Lang Open}"/>
            <MenuItem Command="{Binding OpenCommand}"
                      Visibility="{Binding IsRunnable, Mode=OneWay, Converter={StaticResource Boolean2VisibilityConverter}}"
                      Icon="{Binding Icon}" Header="{u:Lang Run}"/>
            <MenuItem Command="{Binding OpenCommand}" CommandParameter="1"
                      Visibility="{Binding IsRunnable, Mode=OneWay, Converter={StaticResource Boolean2VisibilityConverter}}"
                      Icon="{StaticResource UacDrawingImage}" Header="{u:Lang Run_as_admin}"/>
            <MenuItem Command="{Binding EditCommand}"
                      Visibility="{Binding IsEditable, Mode=OneWay, Converter={StaticResource Boolean2VisibilityConverter}}"
                      Icon="{StaticResource EditDrawingImage}" Header="{u:Lang Edit}"/>
            <Separator/>

            <MenuItem Command="{Binding AddToBookmarksCommand}"
                      Visibility="{Binding IsBookmarked, Mode=OneWay, Converter={StaticResource Boolean2VisibilityReConverter}}"
                      Icon="{StaticResource StarDrawingImage}" Header="{u:Lang Add_to_bookmarks}"/>
            <MenuItem Command="{Binding RemoveFromBookmarksCommand}"
                      Visibility="{Binding IsBookmarked, Mode=OneWay, Converter={StaticResource Boolean2VisibilityConverter}}"
                      Icon="{StaticResource UnstarDrawingImage}" Header="{u:Lang Remove_from_bookmarks}"/>
            <Separator/>

            <MenuItem Command="{Binding ShowPropertiesCommand}"
                      Icon="{StaticResource PropertiesDrawingImage}" Header="{u:Lang Properties}"/>
        </ct:HoverContextMenu>

        <c:FileSystemItemContextMenuConverter x:Key="FileSystemItemContextMenuConverter"
                                              DirectoryContextMenu="{StaticResource FolderItemContextMenu}"
                                              FileContextMenu="{StaticResource FileItemContextMenu}"/>
    </DataGrid.Resources>

    <DataGrid.Style>
        <Style TargetType="ct:FileDataGrid" BasedOn="{StaticResource DataGridBaseStyle}">
            <Setter Property="ItemsPanel" 
                    Value="{Binding ViewType, Mode=OneWay, Converter={StaticResource ItemsPanelConverter}, RelativeSource={RelativeSource Self}}"/>
        </Style>
    </DataGrid.Style>

    <DataGrid.Template>
        <ControlTemplate TargetType="DataGrid">
            <ControlTemplate.Resources>
                <Storyboard x:Key="Storyboard1">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_VerticalScrollBar">
                        <EasingDoubleKeyFrame KeyTime="0:0:.2" Value=".8"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_HorizontalScrollBar">
                        <EasingDoubleKeyFrame KeyTime="0:0:.2" Value=".8"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="Storyboard2">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_VerticalScrollBar">
                        <EasingDoubleKeyFrame KeyTime="0:0:.2" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_HorizontalScrollBar">
                        <EasingDoubleKeyFrame KeyTime="0:0:.2" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </ControlTemplate.Resources>
            <Grid>
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                    <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                        <ScrollViewer.Template>
                            <ControlTemplate TargetType="ScrollViewer">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.ColumnSpan="2" Grid.Row="0" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                                    <hc:ToggleBlock IsChecked="{Binding HasItems,RelativeSource={RelativeSource AncestorType=DataGrid},Mode=OneWay}" Grid.ColumnSpan="3" Grid.Column="0" Grid.Row="1" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch">
                                        <hc:ToggleBlock.CheckedContent>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}"/>
                                        </hc:ToggleBlock.CheckedContent>
                                        <hc:ToggleBlock.UnCheckedContent>
                                            <hc:Empty />
                                        </hc:ToggleBlock.UnCheckedContent>
                                    </hc:ToggleBlock>
                                    <ScrollBar Style="{StaticResource ScrollBarBaseStyle}" Opacity="0" x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                    <ScrollBar Style="{StaticResource ScrollBarBaseStyle}" Opacity="0" x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" VerticalAlignment="Bottom" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <EventTrigger RoutedEvent="MouseEnter">
                                        <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="MouseLeave">
                                        <BeginStoryboard Storyboard="{StaticResource Storyboard2}"/>
                                    </EventTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ScrollViewer.Template>
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </ScrollViewer>
                </Border>
                <Grid x:Name="ContentGrid" ClipToBounds="True">
                    <Border x:Name="SelectionRect" CornerRadius="3" Background="#66326cf3" BorderBrush="{DynamicResource PrimaryBrush}" BorderThickness="1" Visibility="Collapsed" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                </Grid>
            </Grid>
        </ControlTemplate>
    </DataGrid.Template>

    <DataGrid.RowStyle>
        <Style TargetType="DataGridRow" BasedOn="{StaticResource DataGridRowStyle}">
            <Setter Property="ContextMenu" Value="{Binding IsFolder, Converter={StaticResource FileSystemItemContextMenuConverter}}"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
        </Style>
    </DataGrid.RowStyle>
</DataGrid>

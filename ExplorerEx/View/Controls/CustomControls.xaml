<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:u="clr-namespace:ExplorerEx.Utils" 
                    xmlns:ct="clr-namespace:ExplorerEx.View.Controls" 
                    xmlns:hc="https://handyorg.github.io/handycontrol"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

    <Style TargetType="ct:SideBarContent">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid d:DataContext="{d:DesignInstance ct:SideBarContent}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Grid.Triggers>
                            <EventTrigger SourceName="SearchToggleButton" RoutedEvent="ToggleButton.Checked">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Height" Storyboard.TargetName="SearchBoxGrid" To="40" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <EventTrigger SourceName="SearchToggleButton" RoutedEvent="ToggleButton.Unchecked">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Height" Storyboard.TargetName="SearchBoxGrid" To="0" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </Grid.Triggers>

                        <hc:SimplePanel x:Name="SearchBoxGrid" Grid.Row="1" Height="0" ClipToBounds="True" 
                                        Visibility="{Binding ShowSearchButton, Mode=OneWay, Converter={StaticResource Boolean2VisibilityConverter}}">
                            <hc:TextBox x:Name="SearchTextBox" Margin="5,0,5,5" Height="30" VerticalAlignment="Bottom" ShowClearButton="True" 
                                        hc:InfoElement.Placeholder="{u:Lang Search}" Foreground="{DynamicResource PrimaryTextBrush}"/>
                        </hc:SimplePanel>

                        <hc:SimplePanel Grid.Row="0" Margin="0,10,0,0" Background="{DynamicResource PrimaryBrush}">
                            <TextBlock VerticalAlignment="Center" Margin="10,0,0,0" Text="{Binding Header, Mode=OneWay}" 
                                       FontSize="14" Foreground="{DynamicResource PrimaryTextBrush}"/>
                            <StackPanel HorizontalAlignment="Right" Margin="0,0,10,0" Orientation="Horizontal">
                                <ContentPresenter Content="{Binding HeaderContent, Mode=OneWay}"/>
                                <ToggleButton x:Name="SearchToggleButton" hc:IconElement.Geometry="{StaticResource SearchGeometry}" 
                                              Background="Transparent" BorderThickness="0" Width="25" Height="25" Padding="5"
                                              Visibility="{Binding ShowSearchButton, Mode=OneWay, Converter={StaticResource Boolean2VisibilityConverter}}"
                                              Margin="10,0,0,0" ToolTip="{u:Lang Search}"/>
                            </StackPanel>
                        </hc:SimplePanel>

                        <hc:SimplePanel Grid.Row="2" Background="{DynamicResource SecondaryRegionBrush}">
                            <ContentPresenter x:Name="DragArea" Content="{Binding Content, Mode=OneWay}" AllowDrop="true"/>
                            <ContentPresenter x:Name="DragTipPanel" Opacity="0" IsHitTestVisible="False" Content="{Binding DragTip}"/>
                        </hc:SimplePanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ct:TabControlEx">
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="TabItem" BasedOn="{StaticResource TabItemStyle}">
                    <Style.Resources>
                        <CubicEase x:Key="CubicEase" EasingMode="EaseInOut"/>
                    </Style.Resources>
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <ItemContainerTemplate>
                                <ContentPresenter Content="{Binding}" Height="40"
                                                      AllowDrop="True" ToolTipService.InitialShowDelay="300"/>
                            </ItemContainerTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Height" Value="40"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Height" To="60" 
                                                             Duration="0:0:0.1" EasingFunction="{StaticResource CubicEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Height" To="40" 
                                                             Duration="0:0:0.1" EasingFunction="{StaticResource CubicEase}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Background" Value="{DynamicResource DarkDefaultBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource DarkDefaultBrush}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid x:Name="templateRoot" Background="{TemplateBinding Background}" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0"
                                        Margin="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1">
                            <hc:Interaction.Triggers>
                                <hc:RoutedEventTrigger RoutedEvent="TabItem.PreviewMouseDown">
                                    <hc:EventToCommand Command="{Binding TabItemPreviewMouseDownCommand, RelativeSource={RelativeSource AncestorType=ct:TabControlEx}}" PassEventArgsToCommand="True"/>
                                </hc:RoutedEventTrigger>
                                <hc:RoutedEventTrigger RoutedEvent="TabItem.PreviewMouseUp">
                                    <hc:EventToCommand Command="{Binding TabItemPreviewMouseUpCommand, RelativeSource={RelativeSource AncestorType=ct:TabControlEx}}" PassEventArgsToCommand="True"/>
                                </hc:RoutedEventTrigger>
                            </hc:Interaction.Triggers>
                            <ItemsPresenter Margin="{TemplateBinding Padding}"/>
                        </StackPanel>
                        <Border x:Name="contentPanel" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="1"
                                    BorderThickness="{Binding BorderThickness,RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='1,0,0,0'}"
                                    BorderBrush="{DynamicResource BorderBrush}" Background="{TemplateBinding Background}" KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"
                                                  Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource TreeViewItemBaseStyle}" TargetType="ct:ClickableTreeViewItem">
        <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <Grid d:DataContext="{d:DesignInstance ct:ClickableTreeViewItem}">
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="{StaticResource DefaultControlHeight}"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border x:Name="Bd" CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <DockPanel LastChildFill="True" Margin="{Binding Converter={StaticResource TreeViewItemMarginConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                                <hc:SimplePanel>
                                    <Button Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Left" BorderThickness="0" Background="Transparent" Padding="0">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="30"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>

                                            <Image Grid.Column="0" Margin="5" Stretch="Uniform" Source="{Binding Icon}"/>
                                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Header}" FontSize="13" Margin="0,0,10,0"/>
                                        </Grid>
                                    </Button>
                                </hc:SimplePanel>
                            </DockPanel>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true" SourceName="Bd">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource SecondaryRegionBrush}"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource PrimaryBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource PrimaryBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
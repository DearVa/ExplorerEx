<hc:SimplePanel x:Class="ExplorerEx.View.Controls.FileViewGrid"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:m="clr-namespace:ExplorerEx.Model"
                xmlns:u="clr-namespace:ExplorerEx.Utils"
                xmlns:ct="clr-namespace:ExplorerEx.View.Controls"
                xmlns:hc="https://handyorg.github.io/handycontrol"
                xmlns:vm="clr-namespace:ExplorerEx.ViewModel"
                xmlns:c="clr-namespace:ExplorerEx.Converter"
                xmlns:e="clr-namespace:ExplorerEx.Model.Enums"
                mc:Ignorable="d" d:DataContext="{d:DesignInstance vm:FileTabViewModel}">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Margin="10, 15, 10, 10" Orientation="Horizontal">
            <hc:SplitButton Padding="0" Height="35" HitMode="None" IsEnabled="{Binding CanGoToUpperLevel}"
                            Command="{Binding TabViewModel.CreateCommand, RelativeSource={RelativeSource AncestorType=ct:FileViewGrid}}"
                            Style="{StaticResource SplitButtonTransparent}">
                <StackPanel Orientation="Horizontal" Margin="10,5,5,5">
                    <Image VerticalAlignment="Center" Source="{StaticResource NewDrawingImage}" Width="20" Height="20" SnapsToDevicePixels="True"/>
                    <TextBlock Text="{u:Lang New}" VerticalAlignment="Center" Margin="10,0,0,0"/>
                </StackPanel>
                <hc:SplitButton.DropDownContent>
                    <ContextMenu ItemsSource="{Binding Source={x:Static m:CreateFileItem.Items}}"
                                 ItemContainerStyle="{StaticResource CreateMenuItemContainerStyle}"/>
                </hc:SplitButton.DropDownContent>
            </hc:SplitButton>
            <Rectangle Width="1" Height="30" Fill="{DynamicResource ThirdlyTextBrush}" Margin="10,0,10,0"/>

            <StackPanel Orientation="Horizontal" Visibility="{Binding IsFileUtilsVisible, Mode=OneWay, Converter={StaticResource Boolean2VisibilityConverter}, RelativeSource={RelativeSource AncestorType=ct:FileTabControl}}">
                <Button VerticalAlignment="Stretch" Height="35" ToolTip="{u:Lang Cut}"
                        IsEnabled="{Binding CanDeleteOrCut, Mode=OneWay}"
                        Command="{Binding FileItemCommand}" CommandParameter="Cut"
                        Style="{StaticResource ButtonTransparent}">
                    <Image Width="20" Height="20" Source="{DynamicResource CutDrawingImage}"/>
                </Button>
                <Button VerticalAlignment="Stretch" Height="35" Margin="10,0,0,0" ToolTip="{u:Lang Copy}"
                        IsEnabled="{Binding IsItemSelected, Mode=OneWay}"
                        Command="{Binding FileItemCommand}" CommandParameter="Copy"
                        Style="{StaticResource ButtonTransparent}">
                    <Image Width="20" Height="20" Source="{DynamicResource CopyDrawingImage}"/>
                </Button>
                <Button VerticalAlignment="Stretch" Height="35" Margin="10,0,0,0" ToolTip="{u:Lang Paste}"
                        IsEnabled="{Binding CanPaste, Mode=OneWay}"
                        Command="{Binding FileItemCommand}" CommandParameter="Paste"
                        Style="{StaticResource ButtonTransparent}">
                    <Image Width="20" Height="20" Source="{DynamicResource PasteDrawingImage}"/>
                </Button>
                <Button VerticalAlignment="Stretch" Height="35" Margin="10,0,0,0" ToolTip="{u:Lang Rename}"
                        IsEnabled="{Binding IsItemSelected, Mode=OneWay}"
                        Command="{Binding FileItemCommand}" CommandParameter="Rename"
                        Style="{StaticResource ButtonTransparent}">
                    <Image Width="20" Height="20" Source="{DynamicResource RenameDrawingImage}"/>
                </Button>
                <!--<Button VerticalAlignment="Stretch" Height="35" Margin="10,0,0,0" ToolTip="{u:Lang Share}"
                                        IsEnabled="{Binding IsItemSelected, Mode=OneWay}"
                                        Command="{Binding ShareCommand}">
                                    <Image Width="20" Height="20" Source="{StaticResource ShareDrawingImage}"/>
                                </Button>-->
                <Button VerticalAlignment="Stretch" Height="35" Margin="10,0,0,0" ToolTip="{u:Lang Delete}"
                        IsEnabled="{Binding CanDeleteOrCut, Mode=OneWay}"
                        Command="{Binding FileItemCommand}" CommandParameter="Delete"
                        Style="{StaticResource ButtonTransparent}">
                    <Image Width="20" Height="20" Source="{DynamicResource DeleteDrawingImage}"/>
                </Button>
                <Rectangle Width="1" Height="30" Fill="{DynamicResource ThirdlyTextBrush}" Margin="10,0,10,0"/>
            </StackPanel>

            <hc:SplitButton Padding="0" Height="35" HitMode="None" Command="{Binding SwitchViewCommand}"
                            Style="{StaticResource SplitButtonTransparent}">
                <StackPanel Orientation="Horizontal" Margin="0,5,0,5">
                    <Image Margin="10,0,0,0" Width="20" Height="20"
                           Source="{Binding FileView.IsAscending, Mode=OneWay, Converter={StaticResource IsAscending2ImageSourceConverter}}"/>
                    <TextBlock Text="{u:Lang Sort}" VerticalAlignment="Center" Margin="7,0,5,0"/>
                </StackPanel>
                <hc:SplitButton.DropDownContent>
                    <ContextMenu>
                        <ContextMenu.Items>
                            <MenuItem CommandParameter="{x:Static e:ViewSortGroup.SortByName}" Header="{u:Lang Name}" 
                                      IsChecked="{Binding FileView.SortByIndex, Mode=OneWay, Converter={StaticResource Equality2BooleanConverter}, ConverterParameter={x:Static e:ViewSortGroup.SortByName}}"/>
                            <MenuItem CommandParameter="{x:Static e:ViewSortGroup.SortByDateModified}" Header="{u:Lang DateModified}"
                                      IsChecked="{Binding FileView.SortByIndex, Mode=OneWay, Converter={StaticResource Equality2BooleanConverter}, ConverterParameter={x:Static e:ViewSortGroup.SortByDateModified}}"/>
                            <MenuItem CommandParameter="{x:Static e:ViewSortGroup.SortByType}" Header="{u:Lang Type}"
                                      IsChecked="{Binding FileView.SortByIndex, Mode=OneWay, Converter={StaticResource Equality2BooleanConverter}, ConverterParameter={x:Static e:ViewSortGroup.SortByType}}"/>
                            <MenuItem CommandParameter="{x:Static e:ViewSortGroup.SortByFileSize}" Header="{u:Lang FileSize}"
                                      IsChecked="{Binding FileView.SortByIndex, Mode=OneWay, Converter={StaticResource Equality2BooleanConverter}, ConverterParameter={x:Static e:ViewSortGroup.SortByFileSize}}"/>
                            <Separator Style="{StaticResource SeparatorBaseStyle}"/>

                            <MenuItem CommandParameter="{x:Static e:ViewSortGroup.Ascending}" Icon="{DynamicResource SortAscendingDrawingImage}" Header="{u:Lang Ascending}"
                                      IsChecked="{Binding FileView.IsAscending, Mode=OneWay}"/>
                            <MenuItem CommandParameter="{x:Static e:ViewSortGroup.Descending}" Icon="{DynamicResource SortDescendingDrawingImage}" Header="{u:Lang Descending}"
                                      IsChecked="{Binding FileView.IsAscending, Mode=OneWay, Converter={StaticResource Boolean2BooleanReConverter}}"/>
                            <Separator Style="{StaticResource SeparatorBaseStyle}"/>

                            <MenuItem Icon="{DynamicResource GroupDrawingImage}" Header="{u:Lang GroupBy}">
                                <MenuItem.Items>
                                    <MenuItem CommandParameter="{x:Static e:ViewSortGroup.GroupByNone}" Header="{u:Lang None}" 
                                              IsChecked="{Binding FileView.GroupByIndex, Mode=OneWay, Converter={StaticResource Equality2BooleanConverter}, ConverterParameter={x:Static e:ViewSortGroup.GroupByNone}}"/>
                                    <MenuItem CommandParameter="{x:Static e:ViewSortGroup.GroupByName}" Header="{u:Lang Name}" 
                                              IsChecked="{Binding FileView.GroupByIndex, Mode=OneWay, Converter={StaticResource Equality2BooleanConverter}, ConverterParameter={x:Static e:ViewSortGroup.GroupByName}}"/>
                                    <MenuItem CommandParameter="{x:Static e:ViewSortGroup.GroupByDateModified}" Header="{u:Lang DateModified}"
                                              IsChecked="{Binding FileView.GroupByIndex, Mode=OneWay, Converter={StaticResource Equality2BooleanConverter}, ConverterParameter={x:Static e:ViewSortGroup.GroupByDateModified}}"/>
                                    <MenuItem CommandParameter="{x:Static e:ViewSortGroup.GroupByType}" Header="{u:Lang Type}"
                                              IsChecked="{Binding FileView.GroupByIndex, Mode=OneWay, Converter={StaticResource Equality2BooleanConverter}, ConverterParameter={x:Static e:ViewSortGroup.GroupByType}}"/>
                                    <MenuItem CommandParameter="{x:Static e:ViewSortGroup.GroupByFileSize}" Header="{u:Lang FileSize}"
                                              IsChecked="{Binding FileView.GroupByIndex, Mode=OneWay, Converter={StaticResource Equality2BooleanConverter}, ConverterParameter={x:Static e:ViewSortGroup.GroupByFileSize}}"/>
                                </MenuItem.Items>
                            </MenuItem>
                        </ContextMenu.Items>
                    </ContextMenu>
                </hc:SplitButton.DropDownContent>
            </hc:SplitButton>
            <hc:SplitButton Padding="0" Height="35" Margin="10,0,0,0" HitMode="None" Command="{Binding SwitchViewCommand}"
                            Style="{StaticResource SplitButtonTransparent}">
                <StackPanel Orientation="Horizontal" Margin="0,5,0,5">
                    <Image Margin="10,0,0,0" Width="20" Height="20" 
                           Source="{Binding FileView.FileViewTypeIndex, Mode=OneWay, Converter={StaticResource ViewIndex2ImageSourceConverter}}"/>
                    <TextBlock Text="{u:Lang View}" VerticalAlignment="Center" Margin="10,0,5,0"/>
                </StackPanel>
                <hc:SplitButton.DropDownContent>
                    <ContextMenu>
                        <ContextMenu.Items>
                            <MenuItem CommandParameter="{x:Static e:ViewSortGroup.LargeIcons}" Header="{u:Lang LargeIcons}" Icon="{DynamicResource LargeIconsDrawingImage}"
                                      IsChecked="{Binding FileView.FileViewTypeIndex, Mode=OneWay, Converter={StaticResource Equality2BooleanConverter}, ConverterParameter={x:Static e:ViewSortGroup.LargeIcons}}"/>
                            <MenuItem CommandParameter="{x:Static e:ViewSortGroup.SmallIcons}" Header="{u:Lang SmallIcons}" Icon="{DynamicResource SmallIconsDrawingImage}"
                                      IsChecked="{Binding FileView.FileViewTypeIndex, Mode=OneWay, Converter={StaticResource Equality2BooleanConverter}, ConverterParameter={x:Static e:ViewSortGroup.SmallIcons}}"/>
                            <MenuItem CommandParameter="{x:Static e:ViewSortGroup.List}" Header="{u:Lang List}" Icon="{DynamicResource ListDrawingImage}"
                                      IsChecked="{Binding FileView.FileViewTypeIndex, Mode=OneWay, Converter={StaticResource Equality2BooleanConverter}, ConverterParameter={x:Static e:ViewSortGroup.List}}"/>
                            <MenuItem CommandParameter="{x:Static e:ViewSortGroup.Details}" Header="{u:Lang Details}" Icon="{DynamicResource DetailsDrawingImage}"
                                      IsChecked="{Binding FileView.FileViewTypeIndex, Mode=OneWay, Converter={StaticResource Equality2BooleanConverter}, ConverterParameter={x:Static e:ViewSortGroup.Details}}"/>
                            <MenuItem CommandParameter="{x:Static e:ViewSortGroup.Tiles}" Header="{u:Lang Tiles}" Icon="{DynamicResource TilesDrawingImage}"
                                      IsChecked="{Binding FileView.FileViewTypeIndex, Mode=OneWay, Converter={StaticResource Equality2BooleanConverter}, ConverterParameter={x:Static e:ViewSortGroup.Tiles}}"/>
                            <MenuItem CommandParameter="{x:Static e:ViewSortGroup.Content}" Header="{u:Lang Content}" Icon="{DynamicResource ContentDrawingImage}"
                                      IsChecked="{Binding FileView.FileViewTypeIndex, Mode=OneWay, Converter={StaticResource Equality2BooleanConverter}, ConverterParameter={x:Static e:ViewSortGroup.Content}}"/>
                        </ContextMenu.Items>
                    </ContextMenu>
                </hc:SplitButton.DropDownContent>
            </hc:SplitButton>
            <Rectangle Width="1" Height="30" Fill="{DynamicResource ThirdlyTextBrush}" Margin="10,0,10,0"/>

            <Button
                VerticalAlignment="Stretch" Width="45" Height="35" Padding="0" ToolTip="{u:Lang More}"
                Style="{StaticResource ButtonTransparent}">
                <Image Width="24" Height="24" Source="{DynamicResource MoreDrawingImage}"/>
            </Button>
        </StackPanel>

        <Border Grid.Row="1" BorderThickness="0,1,0,0" Margin="10,0" Padding="0,3" BorderBrush="{DynamicResource BorderBrush}">
            <Grid Height="40">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="45"/>
                    <ColumnDefinition Width="45"/>
                    <ColumnDefinition MinWidth="150"/>
                    <ColumnDefinition Width="1"/>
                    <ColumnDefinition Width="300" MinWidth="150"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Margin="0,3" Padding="9" Width="40" Height="34"
                        IsEnabled="{Binding CanGoBack, Mode=OneWay}"
                        Command="{Binding GoBackCommand}"
                        Style="{StaticResource ButtonTransparent}"
                        ToolTip="{Binding GoBackButtonToolTip, Mode=OneWay}">
                    <Image Source="{DynamicResource LeftDrawingImage}"/>
                </Button>
                <Button Grid.Column="1" Margin="3" Padding="9" Width="40" Height="34"
                        IsEnabled="{Binding CanGoForward, Mode=OneWay}" 
                        Command="{Binding GoForwardCommand}"
                        Style="{StaticResource ButtonTransparent}"
                        ToolTip="{Binding GoForwardButtonToolTip, Mode=OneWay}">
                    <Image Source="{DynamicResource RightDrawingImage}"/>
                </Button>
                <ToggleButton x:Name="HistoryToggleButton" Grid.Column="2" Margin="3" Padding="7" Width="40" Height="34"
                              IsEnabled="{Binding HistoryList.Count, Converter={StaticResource Int2BooleanConverter}}"
                              Style="{StaticResource ToggleButtonTransparent}">
                    <Image Source="{DynamicResource HistoryDrawingImage}"/>
                </ToggleButton>
                <Popup Grid.Column="2" MinWidth="150" AllowsTransparency="True" StaysOpen="False" UseLayoutRounding="False" SnapsToDevicePixels="True"
                       IsOpen="{Binding IsChecked, Mode=TwoWay, ElementName=HistoryToggleButton}"
                       hc:BlurPopup.Enabled="True">
                    <ItemsControl ItemsSource="{Binding HistoryList}" Margin="5">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <MenuItem HorizontalAlignment="Stretch"
                                          Click="History_OnClick" Icon="{Binding Icon}" Header="{Binding DisplayText}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Popup>

                <Button Grid.Column="3" Margin="3" Padding="8" Width="40" Height="34"
                        IsEnabled="{Binding CanGoToUpperLevel, Mode=OneWay}" 
                        Command="{Binding GoToUpperLevelCommand}"
                        Style="{StaticResource ButtonTransparent}"
                        ToolTip="{Binding GoToUpperLevelButtonToolTip, Mode=OneWay}">
                    <Image Source="{DynamicResource UpDrawingImage}"/>
                </Button>

                <ct:AddressBar Grid.Column="4" DockPanel.Dock="Left" FullPath="{Binding FullPath, Mode=OneWay}" Margin="5,3"
                               PreviewKeyDown="AddressBar_OnPreviewKeyDown" PopupItemClicked="AddressBar_OnPopupItemClicked"/>
                <GridSplitter Grid.Column="5" Margin="-2,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                <hc:TextBox Grid.Column="6" DockPanel.Dock="Right" ShowClearButton="True" 
                            Margin="5,3,0,3" hc:InfoElement.Placeholder="{Binding SearchPlaceholderText, Mode=OneWay}"
                            Text="{Binding SearchText, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </Border>

        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ct:ClippingBorder Grid.Row="0" Margin="10,0,10,0" CornerRadius="4" 
                               BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}"
                               Background="{DynamicResource RegionBrush}">
                <ct:FileListView x:Name="FileListView" d:DataContext="{d:DesignInstance vm:FileTabViewModel}"
                             ItemsSource="{Binding Items, Mode=OneWay}" 
                             FileView="{Binding FileView, Mode=OneWay}"
                             FullPath="{Binding FullPath, Mode=OneWay}"
                             Folder="{Binding Folder, Mode=OneWay}"
                             Background="{DynamicResource RegionBrush}">
                    <hc:Interaction.Triggers>
                        <hc:RoutedEventTrigger RoutedEvent="ListBox.SelectionChanged">
                            <hc:EventToCommand Command="{Binding SelectionChangedCommand}" PassEventArgsToCommand="True"/>
                        </hc:RoutedEventTrigger>
                        <hc:RoutedEventTrigger RoutedEvent="ct:FileListView.ItemDoubleClicked">
                            <hc:EventToCommand Command="{Binding ItemDoubleClickedCommand}" PassEventArgsToCommand="True"/>
                        </hc:RoutedEventTrigger>
                    </hc:Interaction.Triggers>
                </ct:FileListView>
            </ct:ClippingBorder>

            <hc:SimplePanel Grid.Row="1" Margin="20,0,10,0">
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" d:DataContext="{d:DesignInstance vm:FileTabViewModel}">
                    <TextBlock Foreground="{DynamicResource PrimaryTextBrush}" VerticalAlignment="Center">
                    <Run Text="{Binding FileItemsCount, Mode=OneWay}"/>
                    <Run Text="{u:Lang Run_ItemsCount}"/>
                    </TextBlock>
                    <Rectangle Width="1" Height="18" Fill="{DynamicResource ThirdlyTextBrush}" Margin="10,2,10,2"/>

                    <TextBlock Foreground="{DynamicResource PrimaryTextBrush}" VerticalAlignment="Center"
                               Visibility="{Binding SelectedFileItemsCountVisibility, Mode=OneWay}">
                    <Run Text="{u:Lang Run_SelectedItemsCount}"/>
                    <Run Text="{Binding SelectedFileItemsCount, Mode=OneWay}"/>
                    <Run Text="{u:Lang Run_ItemsCount}"/>
                    </TextBlock>

                    <TextBlock Foreground="{DynamicResource PrimaryTextBrush}" VerticalAlignment="Center" Margin="10,0,0,0" 
                               Visibility="{Binding SelectedFileItemsSizeVisibility, Mode=OneWay}"
                               Text="{Binding SelectedFileItemsSizeText, Mode=OneWay}"/>
                </StackPanel>

                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" d:DataContext="{d:DesignInstance vm:FileTabViewModel}"
                            UseLayoutRounding="True" SnapsToDevicePixels="True">
                    <Button Width="22" Height="22" Style="{StaticResource ButtonSmallTransparent}"
                            Command="{Binding SwitchViewCommand}" CommandParameter="1">
                        <Image Source="{DynamicResource MediumIconsDrawingImage}"/>
                    </Button>
                    <Button Margin="0,0,1,0" Width="22" Height="22" Style="{StaticResource ButtonSmallTransparent}"
                            Command="{Binding SwitchViewCommand}" CommandParameter="3">
                        <Image Source="{DynamicResource DetailsDrawingImage}"/>
                    </Button>
                    <Button Width="22" Height="22" Style="{StaticResource ButtonSmallTransparent}"
                            Command="{Binding SwitchViewCommand}" CommandParameter="4">
                        <Image Source="{DynamicResource TilesDrawingImage}"/>
                    </Button>
                </StackPanel>
            </hc:SimplePanel>
        </Grid>
    </Grid>
</hc:SimplePanel>

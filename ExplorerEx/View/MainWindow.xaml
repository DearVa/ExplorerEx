<Window
    x:Class="ExplorerEx.View.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:ExplorerEx.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:m="clr-namespace:ExplorerEx.Model"
    xmlns:v="clr-namespace:ExplorerEx.View"
    xmlns:u="clr-namespace:ExplorerEx.Utils"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:ct="clr-namespace:ExplorerEx.View.Controls"
    mc:Ignorable="d" d:DataContext="{d:DesignInstance v:MainWindow}" d:DesignWidth="1920" d:DesignHeight="1080"
    Title="ExplorerEx" Background="{DynamicResource WindowBackgroundBrush}" WindowStartupLocation="Manual" PreviewMouseDown="MainWindow_OnPreviewMouseDown"
    Foreground="{DynamicResource PrimaryTextBrush}" BorderThickness="0" AllowDrop="True">

    <Window.Resources>
        <c:StringFilter2VisibilityConverter x:Key="BookmarkFilter"/>
        <c:StringFilter2VisibilityConverter x:Key="RecycleBinFilter"/>

        <ContextMenu x:Key="BookmarkFolderItemContextMenu" d:DataContext="{d:DesignInstance v:MainWindow}">
            <MenuItem CommandParameter="Open"
                      Command="{Binding BookmarkItemCommand}"
                      Icon="{Binding Path=(m:FileItemAttach.FileItem).Icon, RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay}" Header="{u:Lang Open}"/>
            <MenuItem CommandParameter="OpenInNewTab"
                      Command="{Binding BookmarkItemCommand}"
                      Icon="{DynamicResource ShareDrawingImage}" Header="{u:Lang OpenInNewTab}"/>
            <MenuItem CommandParameter="OpenInNewWindow"
                      Command="{Binding BookmarkItemCommand}"
                      Icon="{DynamicResource ShareDrawingImage}" Header="{u:Lang OpenInNewWindow}"/>
            <MenuItem CommandParameter="OpenFileLocation"
                      Command="{Binding BookmarkItemCommand}"
                      Icon="{DynamicResource ShareDrawingImage}" Header="{u:Lang OpenFileLocation}"/>
            <Separator/>

            <MenuItem Command="{Binding EditBookmarkCommand}"
                      CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                      Icon="{DynamicResource EditDrawingImage}" Header="{u:Lang EditBookmark}"/>
            <MenuItem CommandParameter="RemoveFromBookmarks"
                      Command="{Binding BookmarkItemCommand}"
                      Icon="{DynamicResource UnstarDrawingImage}" Header="{u:Lang RemoveFromBookmarks}"/>
            <Separator/>

            <MenuItem CommandParameter="Properties"
                      Command="{Binding BookmarkItemCommand}"
                      Icon="{DynamicResource PropertiesDrawingImage}" Header="{u:Lang Properties}"/>
        </ContextMenu>

        <!-- ReSharper disable once Xaml.RedundantResource -->
        <ContextMenu x:Key="BookmarkCategoryItemContextMenu" d:DataContext="{d:DesignInstance v:MainWindow}">
            <MenuItem CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                      Command="{Binding EditBookmarkCommand}"
                      Icon="{DynamicResource EditDrawingImage}" Header="{u:Lang Edit}"/>
            <MenuItem CommandParameter="Delete"
                      Command="{Binding BookmarkItemCommand}"
                      Icon="{DynamicResource DeleteDrawingImage}" Header="{u:Lang Delete}"/>
        </ContextMenu>

        <ContextMenu x:Key="BookmarkFileItemContextMenu" d:DataContext="{d:DesignInstance v:MainWindow}">
            <MenuItem CommandParameter="Open"
                      Command="{Binding BookmarkItemCommand}"
                      Visibility="{Binding Path=(m:FileItemAttach.FileItem).(m:FileItem.IsExecutable), Mode=OneWay, Converter={StaticResource Boolean2VisibilityReConverter}}"
                      Icon="{Binding Icon}" Header="{u:Lang Open}"/>
            <MenuItem CommandParameter="Open"
                      Command="{Binding BookmarkItemCommand}"
                      Visibility="{Binding Path=(m:FileItemAttach.FileItem).(m:FileItem.IsExecutable), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay, Converter={StaticResource Boolean2VisibilityConverter}}"
                      Icon="{Binding Icon}" Header="{u:Lang Run}"/>
            <MenuItem CommandParameter="RunAs"
                      Command="{Binding BookmarkItemCommand}"
                      Visibility="{Binding Path=(m:FileItemAttach.FileItem).(m:FileItem.IsExecutable), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay, Converter={StaticResource Boolean2VisibilityConverter}}"
                      Icon="{DynamicResource UacDrawingImage}" Header="{u:Lang RunAsAdmin}"/>
            <MenuItem CommandParameter="Edit"
                      Command="{Binding BookmarkItemCommand}"
                      Visibility="{Binding Path=(m:FileItemAttach.FileItem).(m:FileItem.IsEditable), RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay, Converter={StaticResource Boolean2VisibilityConverter}}"
                      Icon="{DynamicResource EditDrawingImage}" Header="{u:Lang Edit}"/>
            <MenuItem CommandParameter="OpenFileLocation"
                      Command="{Binding BookmarkItemCommand}"
                      Icon="{DynamicResource ShareDrawingImage}" Header="{u:Lang OpenFileLocation}"/>
            <Separator/>

            <MenuItem CommandParameter="RemoveFromBookmarks"
                      Command="{Binding BookmarkItemCommand}"
                      Icon="{DynamicResource UnstarDrawingImage}" Header="{u:Lang RemoveFromBookmarks}"/>
            <Separator/>

            <MenuItem CommandParameter="Properties"
                      Command="{Binding BookmarkItemCommand}"
                      Icon="{DynamicResource PropertiesDrawingImage}" Header="{u:Lang Properties}"/>
        </ContextMenu>

        <!-- ReSharper disable once Xaml.RedundantResource -->
        <c:FileSystemItemContextMenuConverter x:Key="BookmarkItemContextMenuConverter"
                                              FolderContextMenu="{StaticResource BookmarkFolderItemContextMenu}"
                                              FileContextMenu="{StaticResource BookmarkFileItemContextMenu}"/>

        <!-- ReSharper disable once Xaml.RedundantResource -->
        <ContextMenu x:Key="SideBarPcItemContextMenu" d:DataContext="{d:DesignInstance v:MainWindow}">
            <MenuItem Height="35">
                <MenuItem.Template>
                    <ControlTemplate>
                        <StackPanel Orientation="Horizontal" d:DataContext="{d:DesignInstance v:MainWindow}">
                            <MenuItem ToolTip="{u:Lang Cut}" CommandParameter="Cut"
                                      Command="{Binding SideBarPcItemCommand}"
                                      Icon="{DynamicResource CutDrawingImage}" Style="{StaticResource ButtonLikeMenuItem}"/>
                            <MenuItem ToolTip="{u:Lang Copy}" CommandParameter="Copy"
                                      Command="{Binding SideBarPcItemCommand}"
                                      Icon="{DynamicResource CopyDrawingImage}" Style="{StaticResource ButtonLikeMenuItem}"/>
                            <MenuItem ToolTip="{u:Lang Rename}" CommandParameter="Rename"
                                      Command="{Binding SideBarPcItemCommand}"
                                      Icon="{DynamicResource RenameDrawingImage}" Style="{StaticResource ButtonLikeMenuItem}"/>
                            <MenuItem ToolTip="{u:Lang Delete}" CommandParameter="Delete"
                                      Command="{Binding SideBarPcItemCommand}"
                                      Icon="{DynamicResource DeleteDrawingImage}" Style="{StaticResource ButtonLikeMenuItem}"/>
                            <MenuItem CommandParameter="Properties"
                                      Command="{Binding SideBarPcItemCommand}"
                                      Icon="{DynamicResource PropertiesDrawingImage}" Style="{StaticResource ButtonLikeMenuItem}"/>
                        </StackPanel>
                    </ControlTemplate>
                </MenuItem.Template>
            </MenuItem>
            <Separator/>

            <MenuItem CommandParameter="Open"
                      Command="{Binding SideBarPcItemCommand}"
                      Icon="{Binding Path=(m:FileItemAttach.FileItem).Icon, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Header="{u:Lang Open}"/>
            <MenuItem CommandParameter="OpenInNewTab"
                      Command="{Binding SideBarPcItemCommand}" 
                      Icon="{DynamicResource ShareDrawingImage}" Header="{u:Lang OpenInNewTab}"/>
            <MenuItem CommandParameter="OpenInNewWindow"
                      Command="{Binding SideBarPcItemCommand}" 
                      Icon="{DynamicResource ShareDrawingImage}" Header="{u:Lang OpenInNewWindow}"/>
            <MenuItem Header="{u:Lang CopyAsPath}" CommandParameter="CopyAsPath"
                      Command="{Binding Path=SideBarPcItemCommand}"
                      Icon="{DynamicResource CopyDrawingImage}"/>
            <Separator/>

            <MenuItem CommandParameter="AddToBookmarks"
                      Command="{Binding SideBarPcItemCommand}"
                      Visibility="{Binding Path=(m:FileItemAttach.FileItem).IsBookmarked, RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay, Converter={StaticResource Boolean2VisibilityReConverter}}"
                      Icon="{DynamicResource StarDrawingImage}" Header="{u:Lang AddToBookmarks}"/>
            <MenuItem CommandParameter="RemoveFromBookmarks"
                      Command="{Binding SideBarPcItemCommand}"
                      Visibility="{Binding Path=(m:FileItemAttach.FileItem).IsBookmarked, RelativeSource={RelativeSource AncestorType=ContextMenu}, Mode=OneWay, Converter={StaticResource Boolean2VisibilityConverter}}"
                      Icon="{DynamicResource UnstarDrawingImage}" Header="{u:Lang RemoveFromBookmarks}"/>
        </ContextMenu>
    </Window.Resources>

    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="-1" ResizeBorderThickness="8" UseAeroCaptionButtons="False" CaptionHeight="0"/>
    </WindowChrome.WindowChrome>

    <hc:SimplePanel x:Name="RootPanel">
        <StackPanel ZIndex="99999" HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal">
            <StackPanel.Resources>
                <Style x:Key="ButtonStyle" TargetType="Button">
                    <Setter Property="Background" Value="Transparent"/>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <hc:SimplePanel Background="{TemplateBinding Background}">
                                    <ContentControl Margin="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                        <Path Fill="{DynamicResource PrimaryTextBrush}" SnapsToDevicePixels="True" Stretch="Uniform" Width="10" Height="10" Data="{TemplateBinding hc:IconElement.Icon}"/>
                                    </ContentControl>
                                </hc:SimplePanel>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.8"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>

            <Button Width="46" Height="34" hc:IconElement.Icon="{StaticResource WindowMinGeometry}" Click="MinimizeWindowButton_OnClick">
                <Button.Style>
                    <Style BasedOn="{StaticResource ButtonStyle}" TargetType="Button">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <ct:MaximizeToggleButton x:Name="MaximizeToggleButton" Width="46" Height="34" IsChecked="{Binding IsMaximized, Mode=TwoWay}"/>
            <Button Width="46" Height="34" hc:IconElement.Icon="{StaticResource CloseGeometry}" Click="CloseWindowButton_OnClick">
                <Button.Style>
                    <Style BasedOn="{StaticResource ButtonStyle}" TargetType="Button">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource DangerBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="SidebarColumnDefinition" Width="300"/>
                <ColumnDefinition Width="1"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <hc:SimplePanel Grid.Column="0" MouseLeftButtonDown="OnDragAreaMouseLeftButtonDown">
                <ct:FluentTabControl x:Name="SidebarTabControl" Focusable="False" Padding="0,52,0,0"
                                   WindowChrome.IsHitTestVisibleInChrome="True" CanDeselect="True" SelectionChanged="OnSidebarSelectionChanged">
                    <TabItem x:Name="BookmarksTabItem" Width="50" Padding="0">
                        <TabItem.Header>
                            <Grid Height="40" ToolTip="{u:Lang Bookmarks}" ToolTipService.InitialShowDelay="300"
                              AllowDrop="True" DragEnter="TabItem_OnDragEnter">
                                <Image Width="24" Height="24" Source="{StaticResource StarDrawingImage}"/>
                            </Grid>
                        </TabItem.Header>
                        <ct:SideBarContent Header="{u:Lang Bookmarks}" Filter="{StaticResource BookmarkFilter}" FileDrop="BookmarksSideBarContent_OnFileDrop">
                            <ct:SideBarContent.Content>
                                <TreeView x:Name="SideBarBookmarksTreeView" BorderThickness="0" Focusable="False" Background="Transparent"
                                          ItemsSource="{Binding Source={x:Static m:BookmarkDbContext.BookmarkCategories}}">
                                    <TreeView.ItemContainerStyle>
                                        <Style TargetType="TreeViewItem" BasedOn="{StaticResource TreeViewItemBaseStyle}">
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="IsSelected" Value="False"/>
                                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                                            <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                                        </Style>
                                    </TreeView.ItemContainerStyle>
                                    <TreeView.Resources>
                                        <HierarchicalDataTemplate ItemsSource="{Binding Children, Mode=OneWay}" DataType="{x:Type m:BookmarkCategory}">
                                            <HierarchicalDataTemplate.ItemContainerStyle>
                                                <Style TargetType="TreeViewItem" BasedOn="{StaticResource TreeViewItemBaseStyle}">
                                                    <Setter Property="Visibility" Value="{Binding Converter={StaticResource BookmarkFilter}, Mode=OneWay}"/>
                                                    <Setter Property="IsSelected" Value="{Binding Path=(m:BookmarkItem.IsSelected), Mode=TwoWay}"/>
                                                </Style>
                                            </HierarchicalDataTemplate.ItemContainerStyle>

                                            <hc:SimplePanel Background="Transparent">
                                                <hc:Interaction.Triggers>
                                                    <hc:RoutedEventTrigger RoutedEvent="Control.PreviewMouseUp">
                                                        <hc:EventToCommand Command="{Binding SideBarItemPreviewMouseUpCommand, RelativeSource={RelativeSource AncestorType=Window}}" PassEventArgsToCommand="True"/>
                                                    </hc:RoutedEventTrigger>
                                                </hc:Interaction.Triggers>

                                                <Button Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Left" BorderThickness="0" 
                                                    Background="Transparent" Padding="0">
                                                    <hc:Interaction.Triggers>
                                                        <hc:RoutedEventTrigger RoutedEvent="Button.Click">
                                                            <hc:EventToCommand Command="{Binding SideBarItemClickCommand, RelativeSource={RelativeSource AncestorType=Window}}" PassEventArgsToCommand="True"/>
                                                        </hc:RoutedEventTrigger>
                                                    </hc:Interaction.Triggers>

                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="30"/>
                                                            <ColumnDefinition/>
                                                        </Grid.ColumnDefinitions>

                                                        <Image Grid.Column="0" Margin="5" Stretch="Uniform" Source="{Binding Icon}"/>
                                                        <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Name}" FontSize="13" Margin="0,0,10,0"/>
                                                    </Grid>
                                                </Button>
                                            </hc:SimplePanel>
                                        </HierarchicalDataTemplate>
                                        <DataTemplate DataType="{x:Type m:BookmarkItem}">
                                            <hc:SimplePanel Background="Transparent">
                                                <hc:Interaction.Triggers>
                                                    <hc:RoutedEventTrigger RoutedEvent="Control.PreviewMouseUp">
                                                        <hc:EventToCommand Command="{Binding SideBarItemPreviewMouseUpCommand, RelativeSource={RelativeSource AncestorType=Window}}" PassEventArgsToCommand="True"/>
                                                    </hc:RoutedEventTrigger>
                                                </hc:Interaction.Triggers>

                                                <Button Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Left" BorderThickness="0"
                                                        Background="Transparent" Padding="0" Focusable="False">
                                                    <hc:Interaction.Triggers>
                                                        <hc:RoutedEventTrigger RoutedEvent="Button.Click">
                                                            <hc:EventToCommand Command="{Binding SideBarItemClickCommand, RelativeSource={RelativeSource AncestorType=Window}}" PassEventArgsToCommand="True"/>
                                                        </hc:RoutedEventTrigger>
                                                    </hc:Interaction.Triggers>

                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="30"/>
                                                            <ColumnDefinition/>
                                                        </Grid.ColumnDefinitions>

                                                        <Image Grid.Column="0" Margin="5" Stretch="Uniform" Source="{Binding Icon}"/>
                                                        <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Name}" FontSize="13" Margin="0,0,10,0"/>
                                                    </Grid>
                                                </Button>
                                            </hc:SimplePanel>
                                        </DataTemplate>
                                    </TreeView.Resources>
                                </TreeView>
                            </ct:SideBarContent.Content>
                            <ct:SideBarContent.DragTip>
                                <hc:SimplePanel Background="#aaffca28">
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{u:Lang ReleaseToAddToBookmark}" 
                                           TextWrapping="Wrap" TextAlignment="Center" FontSize="24" Foreground="{DynamicResource PrimaryTextBrush}"/>
                                </hc:SimplePanel>
                            </ct:SideBarContent.DragTip>
                        </ct:SideBarContent>
                    </TabItem>
                    <TabItem Width="50" Padding="0">
                        <TabItem.Header>
                            <hc:SimplePanel Height="40" ToolTip="{u:Lang ThisPC}" ToolTipService.InitialShowDelay="300"
                                        AllowDrop="True" DragEnter="TabItem_OnDragEnter">
                                <Image Width="24" Height="24" Source="../Assets/Picture/Computer.png"/>
                            </hc:SimplePanel>
                        </TabItem.Header>
                        <ct:SideBarContent Header="{u:Lang ThisPC}" ShowSearchButton="False">
                            <ct:SideBarContent.Content>
                                <TreeView BorderThickness="0"
                                          ItemsSource="{Binding Path=Children, Source={x:Static m:FolderOnlyItem.Home}}">
                                    <TreeView.ItemTemplate>
                                        <HierarchicalDataTemplate ItemsSource="{Binding Children, Mode=OneWay}">
                                            <hc:SimplePanel Background="Transparent">
                                                <hc:Interaction.Triggers>
                                                    <hc:RoutedEventTrigger RoutedEvent="Control.PreviewMouseUp">
                                                        <hc:EventToCommand Command="{Binding SideBarItemPreviewMouseUpCommand, RelativeSource={RelativeSource AncestorType=Window}}" PassEventArgsToCommand="True"/>
                                                    </hc:RoutedEventTrigger>
                                                </hc:Interaction.Triggers>

                                                <Button Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Left" BorderThickness="0" Background="Transparent" Padding="0">
                                                    <hc:Interaction.Triggers>
                                                        <hc:RoutedEventTrigger RoutedEvent="Button.Click">
                                                            <hc:EventToCommand Command="{Binding SideBarItemClickCommand, RelativeSource={RelativeSource AncestorType=Window}}" PassEventArgsToCommand="True"/>
                                                        </hc:RoutedEventTrigger>
                                                        <hc:RoutedEventTrigger RoutedEvent="Button.MouseDoubleClick">
                                                            <hc:EventToCommand Command="{Binding SideBarItemClickCommand, RelativeSource={RelativeSource AncestorType=Window}}" PassEventArgsToCommand="True"/>
                                                        </hc:RoutedEventTrigger>
                                                    </hc:Interaction.Triggers>

                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="30"/>
                                                            <ColumnDefinition/>
                                                        </Grid.ColumnDefinitions>

                                                        <Image Grid.Column="0" Margin="5" Stretch="Uniform" Source="{Binding Icon}"/>
                                                        <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Name}" FontSize="13" Margin="0,0,10,0"/>
                                                    </Grid>
                                                </Button>
                                            </hc:SimplePanel>
                                        </HierarchicalDataTemplate>
                                    </TreeView.ItemTemplate>
                                    <TreeView.ItemContainerStyle>
                                        <Style TargetType="TreeViewItem" BasedOn="{StaticResource TreeViewItemBaseStyle}">
                                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                                            <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                                        </Style>
                                    </TreeView.ItemContainerStyle>
                                </TreeView>
                            </ct:SideBarContent.Content>
                            <!--<ct:SideBarContent.DragTip>
                            <hc:SimplePanel Background="#66ffca28">
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{u:Lang ReleaseToAddToBookmark}" 
                                           TextWrapping="Wrap" TextAlignment="Center" FontSize="24"/>
                            </hc:SimplePanel>
                        </ct:SideBarContent.DragTip>-->
                        </ct:SideBarContent>
                    </TabItem>
                    <TabItem Width="50" Padding="0">
                        <TabItem.Header>
                            <hc:SimplePanel Height="40" ToolTip="{u:Lang Network}" ToolTipService.InitialShowDelay="300"
                                        AllowDrop="True" DragEnter="TabItem_OnDragEnter">
                                <Image Width="24" Height="24" Source="../Assets/Picture/Network.png"/>
                            </hc:SimplePanel>
                        </TabItem.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0" Margin="0,10,0,0" Background="{DynamicResource PrimaryBrush}">
                                <TextBlock VerticalAlignment="Center" Margin="10,0,0,0" Text="{u:Lang Network}" FontSize="14"/>
                            </Grid>
                            <Grid Grid.Row="1" Background="{DynamicResource SecondaryRegionBrush}">
                            </Grid>
                        </Grid>
                    </TabItem>
                    <TabItem Width="50" Padding="0">
                        <TabItem.Header>
                            <hc:SimplePanel Height="40" ToolTip="{u:Lang RecycleBin}" ToolTipService.InitialShowDelay="300" 
                                        AllowDrop="True" DragEnter="TabItem_OnDragEnter">
                                <Image Width="24" Height="24" Source="../Assets/Picture/RecycleBin.png"
                                   Visibility="{Binding Count, Source={x:Static m:RecycleBinItem.Items}, Converter={StaticResource Int2VisibilityReConverter}}"/>
                                <Image Width="24" Height="24" Source="../Assets/Picture/RecycleBinFull.png"
                                   Visibility="{Binding Count, Source={x:Static m:RecycleBinItem.Items}, Converter={StaticResource Int2VisibilityConverter}}"/>
                            </hc:SimplePanel>
                        </TabItem.Header>
                        <ct:SideBarContent Header="{u:Lang RecycleBin}" Filter="{StaticResource RecycleBinFilter}" FileDrop="RecycleBinSideBarContent_OnFileDrop">
                            <ct:SideBarContent.HeaderContent>
                                <StackPanel Orientation="Horizontal">
                                    <Button Width="25" Height="25" Padding="3" Margin="0,0,5,0" ToolTip="{u:Lang EmptyRecycleBin}"
                                        Style="{StaticResource ButtonTransparent}" Click="EmptyRecycleBinButton_OnClick"
                                        IsEnabled="{Binding Count, Source={x:Static m:RecycleBinItem.Items}, Converter={StaticResource Int2BooleanConverter}}">
                                        <Image Margin="1" Source="{StaticResource EmptyDustBinDrawingImage}"/>
                                    </Button>
                                    <Button Width="25" Height="25" Padding="3" ToolTip="{u:Lang RestoreAll}"
                                        Style="{StaticResource ButtonTransparent}" Click="RestoreAllRecycleBinButton_OnClick"
                                        IsEnabled="{Binding Count, Source={x:Static m:RecycleBinItem.Items}, Converter={StaticResource Int2BooleanConverter}}">
                                        <Image Margin="1" Source="{StaticResource RestoreDrawingImage}"/>
                                    </Button>
                                    <!--<Rectangle Width="1" Height="18" Fill="{DynamicResource ThirdlyTextBrush}" Margin="5,1,5,1"/>
                                <Button Width="25" Height="25" ToolTip="{u:Lang OpenOnTheRight}"
                                        Style="{StaticResource ButtonTransparent}"
                                        hc:IconElement.Icon="{StaticResource RightArrowGeometry}"/>-->
                                </StackPanel>
                            </ct:SideBarContent.HeaderContent>
                            <ct:SideBarContent.Content>
                                <ListBox BorderThickness="0" SelectionMode="Extended"
                                         ItemsSource="{Binding AsObservable, Source={x:Static m:RecycleBinItem.Items}}">
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem" BasedOn="{StaticResource ListBoxItemBaseStyle}">
                                            <Setter Property="Visibility" Value="{Binding Converter={StaticResource RecycleBinFilter}}"/>
                                            <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                    <ListBox.Template>
                                        <ControlTemplate TargetType="ListBox">
                                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                                <hc:ScrollViewer Focusable="false">
                                                    <hc:ToggleBlock IsChecked="{Binding HasItems,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch">
                                                        <hc:ToggleBlock.CheckedContent>
                                                            <ItemsPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        </hc:ToggleBlock.CheckedContent>
                                                        <hc:ToggleBlock.UnCheckedContent>
                                                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{u:Lang Empty}" FontSize="16"/>
                                                        </hc:ToggleBlock.UnCheckedContent>
                                                    </hc:ToggleBlock>
                                                </hc:ScrollViewer>
                                            </Border>
                                        </ControlTemplate>
                                    </ListBox.Template>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate DataType="{x:Type m:RecycleBinItem}">
                                            <hc:SimplePanel Background="Transparent">
                                                <hc:SimplePanel.ContextMenu>
                                                    <ContextMenu d:DataContext="{d:DesignInstance m:RecycleBinItem}">
                                                        <!-- ReSharper disable once MarkupAttributeTypo -->
                                                        <MenuItem Icon="{Binding Icon}" Header="{u:Lang Restore}" 
                                                              Command="{Binding Command, Mode=OneTime}" CommandParameter="undelete"/>
                                                        <Separator/>

                                                        <!--<MenuItem Icon="{StaticResource CutDrawingImage}" Header="{u:Lang Cut}"/>
                                                    <Separator/>-->

                                                        <MenuItem Icon="{StaticResource DeleteDrawingImage}" Header="{u:Lang Delete}"
                                                              Command="{Binding Command, Mode=OneTime}" CommandParameter="delete"/>
                                                        <Separator/>

                                                        <MenuItem Icon="{StaticResource PropertiesDrawingImage}" Header="{u:Lang Properties}"
                                                              Command="{Binding Command, Mode=OneTime}" CommandParameter="properties"/>
                                                    </ContextMenu>
                                                </hc:SimplePanel.ContextMenu>

                                                <hc:Interaction.Triggers>
                                                    <hc:RoutedEventTrigger RoutedEvent="Control.PreviewMouseUp">
                                                        <hc:EventToCommand Command="{Binding SideBarItemPreviewMouseUpCommand, RelativeSource={RelativeSource AncestorType=Window}}" PassEventArgsToCommand="True"/>
                                                    </hc:RoutedEventTrigger>
                                                </hc:Interaction.Triggers>

                                                <Grid VerticalAlignment="Center" HorizontalAlignment="Left" Background="Transparent">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="30"/>
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>

                                                    <Image Grid.Column="0" Margin="5" Stretch="Uniform" Source="{Binding Icon}"/>
                                                    <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Name}" FontSize="13" Margin="0,0,10,0"/>
                                                </Grid>
                                            </hc:SimplePanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </ct:SideBarContent.Content>
                            <ct:SideBarContent.DragTip>
                                <hc:SimplePanel Background="#aaff0000">
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{u:Lang ReleaseToMoveToRecycleBin}" 
                                           TextWrapping="Wrap" TextAlignment="Center" FontSize="24" Foreground="{DynamicResource ReverseTextBrush}"/>
                                </hc:SimplePanel>
                            </ct:SideBarContent.DragTip>
                        </ct:SideBarContent>
                    </TabItem>
                    <TabItem Width="50" Padding="0">
                        <TabItem.Header>
                            <hc:SimplePanel Height="40" ToolTip="OneDrive" ToolTipService.InitialShowDelay="300" 
                                        AllowDrop="True" DragEnter="TabItem_OnDragEnter">
                                <Image Width="24" Height="24" Source="{StaticResource OneDriveDrawingImage}"/>
                            </hc:SimplePanel>
                        </TabItem.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0" Margin="0,10,0,0" Background="{DynamicResource PrimaryBrush}">
                                <TextBlock VerticalAlignment="Center" Margin="10,0,0,0" Text="OneDrive" FontSize="14"/>
                            </Grid>
                            <Grid Grid.Row="1" Background="{DynamicResource SecondaryRegionBrush}">
                            </Grid>
                        </Grid>
                    </TabItem>
                </ct:FluentTabControl>

                <Popup IsOpen="{Binding IsAddToBookmarkShow, Mode=TwoWay}" PopupAnimation="Fade" AllowsTransparency="True" 
                   PlacementTarget="{Binding ElementName=BookmarksTabItem}" StaysOpen="False" Placement="Right"
                   hc:BlurPopup.Enabled="True">
                    <Border Background="{DynamicResource BackgroundBrush}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="2">
                        <StackPanel Orientation="Vertical" Width="300" Margin="10">
                            <TextBlock x:Name="AddToBookmarkTipTextBlock" FontSize="16" FontWeight="Bold"/>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Row="0" Grid.Column="0" Text="{u:Lang Name}" VerticalAlignment="Center"/>
                                <hc:TextBox Grid.Row="0" Grid.Column="1" Margin="5,10,0,10"
                                        Text="{Binding BookmarkName, Mode=TwoWay}" VerticalAlignment="Center" ShowClearButton="True"
                                        FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}"
                                        GotKeyboardFocus="BookmarkNameTextBox_OnGotKeyboardFocus"/>

                                <TextBlock Grid.Row="1" Grid.Column="0" Text="{u:Lang Category}" VerticalAlignment="Center"/>
                                <hc:ComboBox x:Name="BookmarkCategoryComboBox" Grid.Row="1" Grid.Column="1" ShowClearButton="True" IsEditable="True" 
                                         ItemsSource="{Binding Source={x:Static m:BookmarkDbContext.BookmarkCategories}}"
                                         Text="{Binding BookmarkCategory, Mode=OneWayToSource}" Margin="5,0,0,0" SelectedIndex="0"/>
                            </Grid>
                            <hc:SimplePanel Margin="0,20,0,0">
                                <Button HorizontalAlignment="Left" Width="100" Content="{u:Lang Ok}" Style="{DynamicResource ButtonSuccess}" Click="OnAddToBookmarkConfirmClick"/>
                                <Button HorizontalAlignment="Right" Width="100" Content="{u:Lang Delete}" Style="{DynamicResource ButtonDanger}" Click="OnAddToBookmarkDeleteClick"/>
                            </hc:SimplePanel>
                        </StackPanel>
                    </Border>
                </Popup>

                <Image HorizontalAlignment="Left" VerticalAlignment="Top" Height="34" Margin="8,14,6,0" 
                   Stretch="Uniform" Source="../Assets/Picture/Logo.png" ToolTip="ExplorerEx"/>

                <Button HorizontalAlignment="Left" VerticalAlignment="Bottom" Height="40" Width="40" Margin="5,0,3,4"
                        ToolTip="{u:Lang Settings}" Padding="0"
                        Style="{StaticResource ButtonTransparent}" Click="SettingsButton_OnClick">
                    <Image Width="24" Height="24" Source="{StaticResource SettingsDrawingImage}"/>
                </Button>
            </hc:SimplePanel>

            <GridSplitter Grid.Column="1" Margin="-2,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                      PreviewMouseDown="SidebarSplitter_OnPreviewMouseDown" PreviewMouseMove="SidebarSplitter_OnPreviewMouseMove" PreviewMouseUp="SidebarSplitter_OnPreviewMouseUp"/>

            <hc:SimplePanel x:Name="ContentGrid" Grid.Column="2" Margin="0,0,0,1">
                <Border MouseLeftButtonDown="OnDragAreaMouseLeftButtonDown" Background="Transparent"/>
            </hc:SimplePanel>
        </Grid>
    </hc:SimplePanel>
</Window>

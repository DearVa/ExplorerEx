<Application x:Class="ExplorerEx.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:c="clr-namespace:ExplorerEx.Converter"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:u="clr-namespace:ExplorerEx.Utils"
             xmlns:e="clr-namespace:ExplorerEx.Models.Enums"
             mc:Ignorable="d">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/Basic/Colors/Colors.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/Theme.xaml"/>

                <ResourceDictionary Source="Assets/Geometries.xaml"/>
                <ResourceDictionary>
                    <c:Equality2BooleanConverter x:Key="Equality2BooleanConverter"/>
                    <c:Equality2VisibilityConverter x:Key="Equality2VisibilityConverter"/>
                    <c:Int2BooleanConverter x:Key="Int2BooleanConverter"/>
                    <c:Int2VisibilityConverter x:Key="Int2VisibilityConverter"/>
                    <c:Int2VisibilityReConverter x:Key="Int2VisibilityReConverter"/>
                    <c:FileName2IconConverter x:Key="FileName2IconConverter"/>
                    <c:FileDateTime2StringConverter x:Key="FileDateTime2StringConverter"/>
                    <c:FullPath2FileNameConverter x:Key="FullPath2FileNameConverter"/>
                    <c:Bytes2StringConverter x:Key="Bytes2StringConverter"/>
                    <u:LangConverter x:Key="LangConverter"/>

                    <c:MultiBoolean2VisibilityConverter x:Key="MultiBoolean2VisibilityConverter"/>

                    <Style x:Key="ButtonLikeMenuItem" TargetType="MenuItem">
                        <Setter Property="Width" Value="38"/>
                        <Setter Property="Height" Value="34"/>
                        <Setter Property="Margin" Value="0,0,3,0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="MenuItem">
                                    <Border x:Name="Border" CornerRadius="5" Background="{TemplateBinding Background}">
                                        <Image Width="20" Height="20" Source="{TemplateBinding Icon}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="ButtonTransparent" BasedOn="{StaticResource ButtonBaseStyle}" TargetType="Button">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="SplitButtonTransparent" BasedOn="{StaticResource SplitButtonBaseStyle}" TargetType="hc:SplitButton">
                        <Setter Property="Background" Value="Transparent"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="ToggleButtonTransparent" BasedOn="{StaticResource ToggleButtonBaseStyle}" TargetType="ToggleButton">
                        <Setter Property="Background" Value="Transparent"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="ToggleButtonSmallTransparent" TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonTransparent}">
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Padding" Value="2"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToggleButton">
                                    <hc:SimplePanel>
                                        <Border BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="2">
                                            <ContentPresenter x:Name="ContentPresenterMain" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Border>
                                    </hc:SimplePanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource SelectBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value=".6"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource SelectBrush}"/>
                                <Setter Property="Opacity" Value=".8"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="CreateMenuItemContainerStyle" TargetType="MenuItem" 
                           BasedOn="{StaticResource MenuItemBaseStyle}">
                        <Setter Property="Icon" Value="{Binding Icon}"/>
                        <Setter Property="Header" Value="{Binding Description}"/>
                        <Setter Property="CommandParameter" Value="{Binding}"/>
                    </Style>

                    <c:Boolean2ObjectConverter x:Key="IsAscending2ImageSourceConverter" 
                                               TrueValue="{DynamicResource SortAscendingDrawingImage}"
                                               FalseValue="{DynamicResource SortDescendingDrawingImage}"/>

                    <c:DictionaryConverter x:Key="ViewIndex2ImageSourceConverter">
                        <c:DictionaryConverter.Items>
                            <c:DependencyKeyValuePair Key="{x:Static e:ViewSortGroup.LargeIcons}" Value="{DynamicResource LargeIconsDrawingImage}"/>
                            <c:DependencyKeyValuePair Key="{x:Static e:ViewSortGroup.MediumIcons}" Value="{DynamicResource MediumIconsDrawingImage}"/>
                            <c:DependencyKeyValuePair Key="{x:Static e:ViewSortGroup.SmallIcons}" Value="{DynamicResource SmallIconsDrawingImage}"/>
                            <c:DependencyKeyValuePair Key="{x:Static e:ViewSortGroup.List}" Value="{DynamicResource ListDrawingImage}"/>
                            <c:DependencyKeyValuePair Key="{x:Static e:ViewSortGroup.Details}" Value="{DynamicResource DetailsDrawingImage}"/>
                            <c:DependencyKeyValuePair Key="{x:Static e:ViewSortGroup.Tiles}" Value="{DynamicResource TilesDrawingImage}"/>
                            <c:DependencyKeyValuePair Key="{x:Static e:ViewSortGroup.Content}" Value="{DynamicResource ContentDrawingImage}"/>
                        </c:DictionaryConverter.Items>
                    </c:DictionaryConverter>
                </ResourceDictionary>

                <ResourceDictionary Source="Views/Controls/CustomControls.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
